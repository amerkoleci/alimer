<Project>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <RepositoryRootDirectory>$(MSBuildThisFileDirectory)..\</RepositoryRootDirectory>
    <RepoBinPath>$(MSBuildThisFileDirectory)..\bin\</RepoBinPath>
    <BaseIntermediateOutputPath>$([System.IO.Path]::GetFullPath('$(RepositoryRootDirectory)obj\$(MSBuildProjectName)'))\</BaseIntermediateOutputPath>
    <BaseOutputPath Condition=" '$(BaseOutputPath)' == '' ">$(RepoBinPath)$(MSBuildProjectName)\</BaseOutputPath>
    <PackageOutputPath>$(RepositoryRootDirectory)build\packages\</PackageOutputPath>

    <LangVersion>8.0</LangVersion>

    <DebugType>portable</DebugType>
    <DebugSymbols Condition=" '$(Configuration)' == 'Debug' ">true</DebugSymbols>
    <Configurations>Debug;Release</Configurations>

    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>CS1591;CS1701</NoWarn>

    <Product>$(AssemblyName) ($(TargetFramework))</Product>
    <NeutralLanguage>en</NeutralLanguage>

    <Authors>Amer Koleci</Authors>
    <Copyright>Copyright Â© 2019-2020 Amer Koleci.</Copyright>
    <RepositoryUrl>https://github.com/amerkoleci/alimer_sharp</RepositoryUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>3D Engine Graphics gamedev alimer Direct3D DirectX Vulkan OpenGL Metal Core Standard Game</PackageTags>

    <!-- Enable symbols -->
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>

    <!-- Packages versions -->
    <NerdbankGitVersioningVersion>3.1.71</NerdbankGitVersioningVersion>
    <VorticeDirectXVersion>1.7.25-beta</VorticeDirectXVersion>
  </PropertyGroup>

  <PropertyGroup>
    <IsWindows Condition="'$(OS)' == 'Windows_NT'">true</IsWindows>
    <IsMacOS Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsMacOS>
    <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
  </PropertyGroup>

  <PropertyGroup>
    <IsNetStandard>$(TargetFramework.ToLower().StartsWith('netstandard'))</IsNetStandard>
    <IsNetFramework>$(TargetFramework.ToLower().StartsWith('net4'))</IsNetFramework>
    <IsMonoAndroid>$(TargetFramework.ToLower().StartsWith('monoandroid'))</IsMonoAndroid>
    <IsXamarinIOS>$(TargetFramework.ToLower().StartsWith('xamarinios'))</IsXamarinIOS>
    <IsXamarinMac>$(TargetFramework.ToLower().StartsWith('xamarinmac'))</IsXamarinMac>
    <IsNetCoreApp>$(TargetFramework.ToLower().StartsWith('netcoreapp'))</IsNetCoreApp>
    <IsUAP>$(TargetFramework.ToLower().StartsWith('uap'))</IsUAP>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Nerdbank.GitVersioning" Version="$(NerdbankGitVersioningVersion)" PrivateAssets="All" />
  </ItemGroup>
</Project>
